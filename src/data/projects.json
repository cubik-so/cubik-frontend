[
    {
        "name": "Solmon",
        "logo": "https://images.vexels.com/media/users/3/242377/isolated/lists/304e716493f158f27841095b49db1ec6-ship-wheel-nautical-element.png",
        "about": "Solmon is a cli tool that enable developer building on anchor to compile and deploy at file change",
        "tags": [
            "Tool",
            "SDK"
        ],
        "url": "https://www.solmon.com/",
        "total_funding_raised": 0,
        "detailed_description": "Solmon is a tool that allows developers to make changes to the source code of a program and have them automatically applied to the running program without the need to manually stop and restart it. This process is called 'hot reloading' or 'hot swapping' which allows developers to save time and effort during the development process.\n#### Benefits of using Solmon \n- It eliminates the need to manually stop and restart the program every time a change is made, saving a significant amount of time and effort for the developer. - Allows developers to make changes to the code and see the results in real-time, without the need to manually stop and restart the program.- It's easy to use, compatible with multiple programming languages, and it can be integrated seamlessly with any development environment.- Allows developers to focus on other tasks, rather than manually stopping and restarting the program.\n #### How Solmon works \n\nSolmon works by monitoring the source code files and automatically detecting when changes are made. Once a change is detected, Solmon will automatically apply the change to the running program without the need for manual intervention. This allows developers to make changes to the code and see the results in real-time, without the need to manually stop and restart the program.\n\nIn summary, Solmon is a powerful tool that allows developers to make changes to the source code of a program and have them automatically applied to the running program without the need to manually stop and restart it. It saves time and effort for developers and allows them to focus on other tasks, it is easy to use and it's compatible with multiple programming languages, making it a valuable tool for any developer.\n",
        "socials": [
            {
                "name": "twitter",
                "url": "https://mobile.twitter.com/anchorlang"
            },
            {
                "name": "discord",
                "url": "https://t.co/Laaoy4esC2"
            }
        ],
        "project_owners": [
            {
                "name": "dhruv.sol",
                "image": "https://pbs.twimg.com/profile_images/1521019107663282177/JOpKsJOP_400x400.jpg",
                "pubkey": "9kvn...3Syh"
            }
        ]
    },
    {
        "name": "Anchor",
        "logo": "https://camo.githubusercontent.com/73b2a433c137f781fb799073ceba7ffded98a2cb5db2ce6aa7f7ab9eaeb547a9/68747470733a2f2f7062732e7477696d672e636f6d2f6d656469612f46565556614f3958454141756c764b3f666f726d61743d706e67266e616d653d736d616c6c",
        "about": "Anchor is a framework for Solana's Sealevel runtime.",
        "tags": [
            "framework",
            "Tool"
        ],
        "url": "https://www.anchor-lang.com/",
        "total_funding_raised": 0,
        "detailed_description": "Anchor is a framework for Solana's Sealevel runtime, providing several convenient developer tools for writing smart contracts on the Solana blockchain. It is designed to make it easy for developers to create and deploy decentralized applications (dApps) on the Solana blockchain. \n\n#### Features of Anchor\n\n- **Rust eDSL**: Anchor provides a Rust eDSL (embedded domain-specific language) for writing Solana programs. This allows developers to write smart contracts in a high-level, easy-to-understand language, while still having the safety and performance guarantees of Rust.\n- **IDL specification**: Anchor uses an IDL (interface definition language) specification to define the contract's public functions, input and output types, and errors. This allows for easy integration with other tools and services, and improves the overall stability and security of the contract.\n- **TypeScript package**: Anchor provides a TypeScript package for generating clients from the IDL. This allows developers to easily interact with the smart contract from their dApps, without having to manually write low-level code.\n- **CLI and workspace management**: Anchor includes a CLI (command-line interface) and workspace management tools for developing complete applications. This makes it easy for developers to set up, test, and deploy their dApps on the Solana blockchain.\n- **Familiar experience**: If you're familiar with developing in Ethereum's Solidity, Truffle, web3.js, then the experience of developing with Anchor will be familiar. Although the DSL syntax and semantics are targeted at Solana, the high-level flow of writing RPC request handlers, emitting an IDL, and generating clients from IDL is the same.\n\nAnchor is a powerful tool that makes it easy for developers to create and deploy decentralized applications on the Solana blockchain. With its convenient developer tools, high-level Rust eDSL, and easy-to-use CLI and workspace management tools, Anchor provides a familiar and streamlined experience for developers.\n\n#### Conclusion\n\nAnchor is a framework that provides a set of developer tools for writing smart contracts on Solana. With its Rust eDSL, IDL specification, TypeScript package, CLI and workspace management features, the experience for developers is similar to that of Ethereum's Solidity, Truffle and web3.js. Anchor helps developers to create, test and deploy their dApps on the Solana blockchain with ease.\n",
        "socials": [
            {
                "name": "twitter",
                "url": "https://mobile.twitter.com/anchorlang"
            },
            {
                "name": "discord",
                "url": "https://t.co/Laaoy4esC2"
            }
        ],
        "project_owners": [
            {
                "name": "Armani Ferrante",
                "image": "https://avatars.githubusercontent.com/u/6990215?v=4",
                "pubkey": "k0Lq...bK83"
            },
            {
                "name": "Paul",
                "image": "https://avatars.githubusercontent.com/u/29666990?v=4",
                "pubkey": "tKa2...NivC"
            }
        ]
    },
    {
        "name": "Seahorse",
        "logo": "https://pbs.twimg.com/profile_images/1556384244598964226/S3cx06I2_400x400.jpg",
        "about": "Seahorse lets you write Solana programs in Python. It is a community-led project built on Anchor",
        "total_funding_raised": 0,
        "url": "https://seahorse-lang.org/",
        "detailed_description": "[Seahorse](https://seahorse-lang.org/) is a programming language that allows developers to write Solana programs in Python. It is a community-led project that is built on top of Anchor, a platform for building decentralized applications on the Solana blockchain.\n\n#### Benefits of using Seahorse\n\n- Python's ease-of-use while still having the same safety guarantees of every Rust program on the Solana chain.\n- Low-level memory problems are handled by default, letting you worry about the important stuff.\n\n#### Features\n\n - **Compile-time type safety**: Ensures that type errors are caught at compile-time, rather than at runtime, which reduces the risk of bugs and improves the overall stability of the program.\n- **Fully interoperable with Rust code**: Allows developers to leverage existing Rust libraries and modules in their Python programs.\n - **Compatibility with Anchor**: Built to be compatible with Anchor, which means that it can easily integrate with Anchor's existing tools and services for building decentralized applications.\n- **Built-in integration with Pyth**: Python library for interacting with the Solana blockchain, allowing developers to easily access the blockchain's data and functionality from within their Python programs.\n\n#### Note\n Seahorse is currently in beta and many features are not yet implemented. It is also not production ready. The Seahorse compiler generates intermediate Rust artifacts and uses Anchor to do some of the heavy lifting. With that said, it's a promising project with a lot of potential for developers looking to build decentralized applications on the Solana blockchain.\n",
        "socials": [
            {
                "name": "twitter",
                "url": "https://twitter.com/openbookdex"
            },
            {
                "name": "discord",
                "url": "https://discord.com/invite/pX3n5Sercb"
            }
        ],
        "tags": [
            "SDK"
        ],
        "project_owners": [
            {
                "name": "Amelia",
                "image": "https://pbs.twimg.com/profile_images/1529659195410239488/gaWqpqRS_400x400.jpg",
                "pubkey": "3Kd4...V9Sj"
            }
        ]
    },
    {
        "name": "Tiny Dancer",
        "logo": "https://media.discordapp.net/attachments/1051153492229763114/1060503855709818900/Frame_180.png",
        "about": "solmon is a cli tool that enable developer building on anchor to compile and deploy at file change",
        "tags": [
            "Tool"
        ],
        "url": "https://www.tinydancer.xyz/",
        "total_funding_raised": 0,
        "detailed_description": "A Diet RPC Validator on the Solana Blockchain \n\nTinyDancer is a diet RPC validator on the Solana blockchain. It is designed to validate transactions and maintain the integrity of the Solana network. \n\nAs a validator, TinyDancer is responsible for verifying the transactions that are broadcasted to the Solana network and adding them to the blockchain. It does this by participating in the consensus process, where validators come to agreement on the order of transactions and the state of the blockchain.\n\nIn addition to its role as a validator, TinyDancer also provides a diet-related feature set that allows users to track and manage their dietary intake, set and achieve weight loss goals, and connect with a community of like-minded individuals. The platform utilizes smart contracts on the Solana blockchain to securely and transparently track users' dietary information, such as calorie and nutrient intake. Users can input their food intake, track their progress and set goals.\n \nThis combination of a validator and diet-related feature set makes TinyDancer a unique addition to the Solana network, providing users with not just the traditional validation services but also a manage their health goals.\n ",
        "socials": [
            {
                "name": "twitter",
                "url": "https://mobile.twitter.com/anchorlang"
            },
            {
                "name": "discord",
                "url": "https://t.co/Laaoy4esC2"
            }
        ],
        "project_owners": [
            {
                "name": "Irfan.sol",
                "image": "image url",
                "pubkey": "438dn...rsdf"
            },
            {
                "name": "Hersh",
                "image": "https://pbs.twimg.com/profile_images/1581915483149942785/APihyiWV_400x400.jpg",
                "pubkey": "438dnjvk43908udj4wrsdf"
            }
        ]
    },
    {
        "name": "Soless Mint",
        "logo": "https://refercodes-media.s3.amazonaws.com/media/services/mint/picture.png",
        "about": "A NFT Platform that Allows Users to Mint NFTs Without Sol",
        "tags": [
            "NFT",
            "SDK"
        ],
        "url": "https://www.SolessMint.xyz/",
        "total_funding_raised": 0,
        "detailed_description": "A NFT Platform that Allows Users to Mint NFTs Without Solana \n\nSolless Mint is a non-fungible token (NFT) platform that allows users to mint their own NFTs without having Solana in their wallet. This platform utilizes a mechanism that allows users to mint NFTs without the need for Solana, making it more accessible and user-friendly.\n\nSolless Mint is designed to be a user-friendly platform, providing an easy-to-use interface for users to mint, manage and trade their NFTs. It also allows users to customize and personalize their NFTs, giving them more control over the final product.\n\nIt can be used by artists, gamers, and other creators to mint unique and rare digital assets without any barriers to entry. This can be especially useful for artists and creators who are new to the world of NFTs and may not have the technical knowledge or resources to mint NFTs on their own.\n\nSolless Mint is also built on a decentralized infrastructure, which ensures the security and immutability of the NFTs minted on the platform. This allows users to have full control over their digital assets and eliminates the need for a central authority.\n\nOverall, Solless Mint is a platform that allows users to mint NFTs without the need for Solana, making it more accessible and user-friendly. It can be used by artists, gamers, and other creators to mint unique and rare digital assets, and it's built on a decentralized infrastructure, ensuring the security and immutability of the NFTs minted on the platform.\n",
        "socials": [
            {
                "name": "twitter",
                "url": "https://mobile.twitter.com/anchorlang"
            },
            {
                "name": "discord",
                "url": "https://t.co/Laaoy4esC2"
            }
        ],
        "project_owners": [
            {
                "name": "Dhruv",
                "image": "https://avatars.githubusercontent.com/u/6990215?v=4",
                "pubkey": "k0Lq...bK83"
            },
            {
                "name": "Dhruv",
                "image": "https://avatars.githubusercontent.com/u/29666990?v=4",
                "pubkey": "tKa2...NivC"
            }
        ]
    },
    {
        "name": "OpenBook",
        "logo": "https://pbs.twimg.com/profile_images/1592603543969492993/oZUliEWn_400x400.jpg",
        "about": "Write Anchor-compatible Solana programs in Python",
        "total_funding_raised": 0,
        "url": "https://www.openbook-solana.com/",
        "detailed_description": "[Seahorse](https://seahorse-lang.org/) is a programming language that allows developers to write Solana programs in Python. It is a community-led project that is built on top of Anchor, a platform for building decentralized applications on the Solana blockchain.\n\n#### Benefits of using Seahorse\n\n- Python's ease-of-use while still having the same safety guarantees of every Rust program on the Solana chain.\n- Low-level memory problems are handled by default, letting you worry about the important stuff.\n\n#### Features\n\n - **Compile-time type safety**: Ensures that type errors are caught at compile-time, rather than at runtime, which reduces the risk of bugs and improves the overall stability of the program.\n- **Fully interoperable with Rust code**: Allows developers to leverage existing Rust libraries and modules in their Python programs.\n - **Compatibility with Anchor**: Built to be compatible with Anchor, which means that it can easily integrate with Anchor's existing tools and services for building decentralized applications.\n- **Built-in integration with Pyth**: Python library for interacting with the Solana blockchain, allowing developers to easily access the blockchain's data and functionality from within their Python programs.\n\n#### Note\n Seahorse is currently in beta and many features are not yet implemented. It is also not production ready. The Seahorse compiler generates intermediate Rust artifacts and uses Anchor to do some of the heavy lifting. With that said, it's a promising project with a lot of potential for developers looking to build decentralized applications on the Solana blockchain.\n",
        "socials": [
            {
                "name": "twitter",
                "url": "https://twitter.com/openbookdex"
            },
            {
                "name": "discord",
                "url": "https://discord.com/invite/pX3n5Sercb"
            }
        ],
        "tags": [
            "DeFi"
        ],
        "project_owners": [
            {
                "name": "hoak",
                "image": "https://avatars.githubusercontent.com/u/20302574?v=4",
                "pubkey": "3Kd4...V9Sj"
            },
            {
                "name": "Soju",
                "image": "https://pbs.twimg.com/profile_images/1616081366818639873/ct7caYM8_400x400.jpg",
                "pubkey": "3Kd4...V9Sj"
            }
        ]
    }
]